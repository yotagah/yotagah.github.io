{"version":3,"sources":["App.js","index.js"],"names":["lastMouseX","lastMouseY","rotX","rotY","containerMouseDown","event","clientX","clientY","document","querySelector","addEventListener","mouseMoved","containerTouchDown","touches","touchMoved","removeEventListener","movement","deltaX","deltaY","applyRotation","querySelectorAll","forEach","element","matrix","window","getComputedStyle","transform","replace","split","x","y","z","style","pageX","pageY","changedTouches","resizeGame","scaleWidth","innerWidth","scaleHeight","innerHeight","scale","onresize","onload","App","emptyBoard","Array","map","e","fill","useState","board","setBoard","currentPlayer","setCurrentPlayer","winner","setWinner","players","setPlayers","prePlayers","setPrePlayers","checkWinner","checkDraw","planes","push","plane","cells","p","every","cell","itemZ","itemY","itemX","className","onMouseDown","onTouchStart","key","onClick","handleCellClick","transformOrigin","space","value","onChange","target","backgroundColor","setTimeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAC5CA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,KAG9CY,EAAOC,KAAK,CACVb,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG,GAAG,GAAIA,EAAM,GAAG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","file":"static/js/main.321f076b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nlet lastMouseX = 0, lastMouseY = 0;\nlet rotX = -30, rotY = -30;\nconst space = 100;\nconst margin = 180;\n\nconst containerMouseDown = (event) => {\n  lastMouseX = event.clientX;\n  lastMouseY = event.clientY;\n  document.querySelector('.container').addEventListener('mousemove', mouseMoved);\n}\n\nconst containerTouchDown = (event) => {\n  lastMouseX = event.touches[0].clientX;\n  lastMouseY = event.touches[0].clientY;\n  document.querySelector('.container').addEventListener('touchmove', touchMoved);\n}\n\nconst containerMouseUp = () => {\n  document.querySelector('.container').removeEventListener('mousemove', mouseMoved);\n}\n\nconst containerTouchUp = () => {\n  document.querySelector('.container').removeEventListener('touchmove', touchMoved);\n}\n\ndocument.addEventListener('mouseup', containerMouseUp);\ndocument.addEventListener('touchend', containerTouchUp);\n\nconst movement = (deltaX, deltaY) => {\n  rotY += deltaX * 0.3;\n  rotX -= deltaY * 0.3;\n  applyRotation();\n}\n\nconst applyRotation = () => {\n  let cubes = document.querySelectorAll('.cube');\n\n  cubes.forEach(function(element) {\n    let transform = window.getComputedStyle(element).transform;\n    let matrix = transform.replace(/[^0-9\\-.,]/g, '').split(',');\n    \n    let x = matrix[12] || matrix[4];\n    let y = matrix[13] || matrix[5];\n    let z = matrix[14] || matrix[6];\n    element.style.transform = `translateX(${x}px) translateY(${y}px) translateZ(${z}px) rotateX(${rotX}deg) rotateY(${rotY}deg)`;\n  })\n}\n\nconst mouseMoved = (event) => {\n  var deltaX = event.pageX - lastMouseX;\n  var deltaY = event.pageY - lastMouseY;\n\n  lastMouseX = event.pageX;\n  lastMouseY = event.pageY;\n\n  movement(deltaX, deltaY);\n}\n\nconst touchMoved = (event) => {\n  var deltaX = event.changedTouches[0].clientX - lastMouseX;\n  var deltaY = event.changedTouches[0].clientY - lastMouseY;\n\n  lastMouseX = event.changedTouches[0].clientX;\n  lastMouseY = event.changedTouches[0].clientY;\n\n  movement(deltaX, deltaY);\n}\n\nconst resizeGame = () => {\n  let windowWidth = window.innerWidth;\n  let windowHeight = window.innerHeight;\n\n  let game = document.querySelector('.container');\n\n  let scaleWidth = (windowWidth)/600;\n  let scaleHeight = (windowHeight)/600;\n\n  let scale = scaleWidth > scaleHeight ? scaleHeight : scaleWidth;\n\n  game.style.transform = `scale(${scale})`;\n}\n\nwindow.onresize = resizeGame;\nwindow.onload = resizeGame;\n\nfunction App()\n{\n  const emptyBoard = [...Array(3)].map(e => [...Array(3)].map(e => Array(3).fill(0)));\n  const [board, setBoard] = useState(emptyBoard);\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n  const [winner, setWinner] = useState(null);\n  const [players, setPlayers] = useState(2);\n  const [prePlayers, setPrePlayers] = useState(2);\n\n  const handleCellClick = (x,y,z) =>\n  {\n    if(winner) return null;\n    if(board[z][y][x] !== 0) return null;\n\n    board[z][y][x] = currentPlayer;\n\n    setCurrentPlayer(currentPlayer == players ? 1 : currentPlayer+1);\n\n    checkWinner();\n  }\n\n  const checkWinner = () => {\n\n    checkDraw();\n\n    let planes = [];\n\n    planes.push([\n      board[0][0][0], board[0][0][1], board[0][0][2],\n      board[0][1][0], board[0][1][1], board[0][1][2],\n      board[0][2][0], board[0][2][1], board[0][2][2]\n    ]);\n\n    planes.push([\n      board[1][0][0], board[1][0][1], board[1][0][2],\n      board[1][1][0], board[1][1][1], board[1][1][2],\n      board[1][2][0], board[1][2][1], board[1][2][2]\n    ]);\n\n    planes.push([\n      board[2][0][0], board[2][0][1], board[2][0][2],\n      board[2][1][0], board[2][1][1], board[2][1][2],\n      board[2][2][0], board[2][2][1], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[0][0][0], board[1][0][0], board[2][0][0],\n      board[0][1][0], board[1][1][0], board[2][1][0],\n      board[0][2][0], board[1][2][0], board[2][2][0]\n    ]);\n\n    planes.push([\n      board[0][0][1], board[1][0][1], board[2][0][1],\n      board[0][1][1], board[1][1][1], board[2][1][1],\n      board[0][2][1], board[1][2][1], board[2][2][1]\n    ]);\n\n    planes.push([\n      board[0][0][2], board[1][0][2], board[2][0][2],\n      board[0][1][2], board[1][1][2], board[2][1][2],\n      board[0][2][2], board[1][2][2], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[0][0][0], board[1][0][0], board[2][0][0],\n      board[0][0][1], board[1][0][1], board[2][0][1],\n      board[0][0][2], board[1][0][2], board[2][0][2]\n    ]);\n\n    planes.push([\n      board[0][1][0], board[1][1][0], board[2][1][0],\n      board[0][1][1], board[1][1][1], board[2][1][1],\n      board[0][1][2], board[1][1][2], board[2][1][2]\n    ]);\n\n    planes.push([\n      board[0][2][0], board[1][2][0], board[2][2][0],\n      board[0][2][1], board[1][2][1], board[2][2][1],\n      board[0][2][2], board[1][2][2], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[0][0][0], board[1][0][0], board[2][0][0],\n      board[0][1][1], board[1][1][1], board[2][1][1],\n      board[0][2][2], board[1][2][2], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[0][2][0], board[1][2][0], board[2][2][0],\n      board[0][1][1], board[1][1][1], board[2][1][1],\n      board[0][0][2], board[1][0][2], board[2][0][2]\n    ]);\n\n    planes.push([\n      board[0][0][0], board[0][0][1], board[0][0][2],\n      board[1][1][0], board[1][1][1], board[1][1][2],\n      board[2][2][0], board[2][2][1], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[2][0][0], board[2][0][1], board[2][0][2],\n      board[1][1][0], board[1][1][1], board[1][1][2],\n      board[0][2][0], board[0][2][1], board[0][2][2]\n    ]);\n\n    planes.push([\n      board[0][0][0], board[0][1][0], board[0][2][0],\n      board[1][0][1], board[1][1][1], board[1][2][1],\n      board[2][0][2], board[2][1][2], board[2][2][2]\n    ]);\n\n    planes.push([\n      board[0][0][2], board[0][1][2], board[0][2][2],\n      board[1][0][1], board[1][1][1], board[1][2][1],\n      board[2][0][0], board[2][1][0], board[2][2][0]\n    ]);\n\n    planes.forEach(plane => {\n      const possibleWaysToWin = [\n        [plane[0], plane[1], plane[2]],\n        [plane[3], plane[4], plane[5]],\n        [plane[6], plane[7], plane[8]],\n        [plane[0], plane[3], plane[6]],\n        [plane[1], plane[4], plane[7]],\n        [plane[2], plane[5], plane[8]],\n        [plane[0], plane[4], plane[8]],\n        [plane[2], plane[4], plane[6]]\n      ];\n\n      possibleWaysToWin.forEach(cells => {\n        for(let p = 1; p <= players; p++) {\n          if(cells.every(cell => cell === p)) {\n            setWinner(p);\n          }\n        }\n      });\n    });\n  }\n\n  const checkDraw = () => {\n    if(board.every(itemZ =>\n        itemZ.every(itemY =>\n          itemY.every(itemX =>\n            itemX !== 0\n          )\n        )\n      )\n    ) {\n      setWinner(\"Draw\");\n    }\n  }\n\n  const resetGame = () => {\n    setPlayers(prePlayers);\n    setCurrentPlayer(1);\n    setBoard(emptyBoard);\n    setWinner(null);\n    rotX = -30;\n    rotY = -30;\n    applyRotation();\n    document.querySelector('.container').style.backgroundColor = \"#ff0\";\n    setTimeout(() => {\n      document.querySelector('.container').style.backgroundColor = \"#222\";\n    }, 100);\n  }\n\n  const handlePlayers = (event) => {\n    setPrePlayers(event.target.value);\n  }\n\n  return (\n    <div>\n      <div className=\"container\" onMouseDown={containerMouseDown} onTouchStart={containerTouchDown}>\n        <div className=\"world\">\n          {board.map((itemZ, z) => (\n            itemZ.map((itemY, y) => (\n              itemY.map((itemX, x) => (\n                <div\n                  key={`${x}${y}${z}`}\n                  className={`cube c${x}${y}${z} p${itemX}`}\n                  onClick={() => handleCellClick(x,y,z)}\n                  style={{\n                    transform: `\n                      translateX(${margin+x*space}px)\n                      translateY(${margin+y*space}px)\n                      translateZ(${-space-margin+z*space}px)\n                      rotateX(${rotX}deg)\n                      rotateY(${rotY}deg)`,\n                    transformOrigin: `\n                      ${((1-x)*space)+space/8}px\n                      ${((1-y)*space)+space/8}px\n                      ${((1-z)*space)+space/8}px`\n                  }}\n\n                >\n                  <div className=\"face front\"></div>\n                  <div className=\"face back\"></div>\n                  <div className=\"face right\"></div>\n                  <div className=\"face left\"></div>\n                  <div className=\"face top\"></div>\n                  <div className=\"face bottom\"></div>\n                </div>\n              ))\n            ))\n          ))}\n        </div>\n      </div>\n      <div className=\"menu\">\n        {winner &&\n          <div className=\"winner\">\n            {winner !== \"Draw\" ?\n              <p>Player<br/><span className={`next p${winner}`}>{winner}</span><br/>Won!</p>\n            :\n              <p>Draw!<br/>Nobody<br/>Won!</p>\n            }\n          </div>\n        }\n        {!winner &&\n          <p>Next Player: <span className={`next p${currentPlayer}`}>{currentPlayer}</span></p>\n        }\n        <select value={prePlayers} onChange={handlePlayers}>\n          <option value=\"2\">2 players</option>\n          <option value=\"3\">3 players</option>\n          <option value=\"4\">4 players</option>\n          <option value=\"5\">5 players</option>\n          <option value=\"6\">6 players</option>\n        </select>\n        <div className={`start-to-effect ${players === prePlayers ? 'invisible' : ''}`}>Start a new game to take effect!</div>\n        <button onClick={resetGame}>Start New Game</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}